#
# Title:临床路径评估标准
#
# Description:临床路径评估标准
#
# Copyright: JavaHis (c) 2011
# @author ZhenQin 2011/05/04
Module.item=queryCLP_EVL_CAT1;queryMaxCode1;isExists1;isExists2;queryCLP_EVL_CAT2;queryMaxCode2;&
queryCLP_EVL_CAT3;queryMaxCode3;&
insertCLP_EVL_CAT1;insertCLP_EVL_CAT2;insertCLP_EVL_CAT3;&
updateCLP_EVL_CAT1;updateCLP_EVL_CAT2;updateCLP_EVL_CAT3;deleteCLP_EVL_CAT3;verify;deleteCLP_EVL_CAT1;deleteCLP_EVL_CAT2;&
deleteCLP_EVL_CAT3WithParentID1;deleteCLP_EVL_CAT3WithParentID2;deleteCLP_EVL_CAT2WithParentID1

//根据条件临床路径评估标准
#CAT1_CODE;CAT1_CHN_DESC;CAT1_ENG_DESC;OPT_USER;OPT_DATE;OPT_TERM
queryCLP_EVL_CAT1.Type=TSQL
queryCLP_EVL_CAT1.SQL=SELECT CAT1_CODE,CAT1_CHN_DESC,CAT1_ENG_DESC,PY1,PY2,SEQ AS SEQ1,DESCRIPTION AS DESCRIPTION1,OPT_USER,OPT_DATE,OPT_TERM &
		  FROM CLP_EVL_CAT1
queryCLP_EVL_CAT1.item=CAT1_CODE;CAT1_CHN_DESC;CAT1_ENG_DESC;REGION_CODE
queryCLP_EVL_CAT1.CAT1_CODE=CAT1_CODE = <CAT1_CODE>
queryCLP_EVL_CAT1.CAT1_CHN_DESC=CAT1_CHN_DESC LIKE <CAT1_CHN_DESC>
queryCLP_EVL_CAT1.CAT1_ENG_DESC=CAT1_ENG_DESC LIKE <CAT1_ENG_DESC>
queryCLP_EVL_CAT1.REGION_CODE = REGION_CODE = <REGION_CODE> ORDER BY SEQ ASC
queryCLP_EVL_CAT1.Debug=N

//查询CLP_EVL_CAT1中code的最大值
queryMaxCode1.Type=TSQL
queryMaxCode1.SQL=SELECT MAX(CAT1_CODE) AS MAXCODE FROM CLP_EVL_CAT1
queryMaxCode1.Debug=N

//判断是否存在该节点
isExists1.Type=TSQL
isExists1.SQL=SELECT COUNT(CAT1_CODE) AS MAXCODE FROM CLP_EVL_CAT1 WHERE CAT1_CODE = <CAT1_CODE>
isExists1.Debug=N

//判断是否存在该节点
isExists2.Type=TSQL
isExists2.SQL=SELECT COUNT(CAT2_CODE) AS MAXCODE FROM CLP_EVL_CAT2 WHERE CAT2_CODE = <CAT2_CODE> AND CAT1_CODE = <CAT1_CODE>
isExists2.Debug=N

//CAT2_CODE;CAT2_CHN_DESC;CAT2_ENG_DESC;OPT_USER;OPT_DATE;OPT_TERM
queryCLP_EVL_CAT2.Type=TSQL
queryCLP_EVL_CAT2.SQL=SELECT CAT2_CODE,CAT2_CHN_DESC,CAT2_ENG_DESC,SEQ AS SEQ2,PY1,PY2,DESCRIPTION AS DESCRIPTION2,OPT_USER,OPT_DATE,OPT_TERM &
		  FROM CLP_EVL_CAT2 WHERE CAT1_CODE = <CAT1_CODE>  ORDER BY SEQ ASC
queryCLP_EVL_CAT2.Debug=N

//查询CLP_EVL_CAT2中code的最大值
queryMaxCode2.Type=TSQL
queryMaxCode2.SQL=SELECT COUNT(CAT2_CODE) AS MAXCODE FROM CLP_EVL_CAT2 WHERE CAT1_CODE = <CAT1_CODE>
queryMaxCode2.Debug=N

//CAT3_CODE;CAT3_CHN_DESC;CAT3_ENG_DESC;SCORE;OPT_USER;OPT_DATE;OPT_TERM
queryCLP_EVL_CAT3.Type=TSQL
queryCLP_EVL_CAT3.SQL=SELECT CAT3_CODE,CAT3_CHN_DESC,CAT3_ENG_DESC,SEQ AS SEQ3,PY1,PY2,SCORE,DESCRIPTION AS DESCRIPTION3,OPT_USER,OPT_DATE,OPT_TERM &
		  FROM CLP_EVL_CAT3 WHERE CAT1_CODE = <CAT1_CODE> AND CAT2_CODE = <CAT2_CODE> ORDER BY SEQ ASC
queryCLP_EVL_CAT3.Debug=N

//查询CLP_EVL_CAT3中code的最大值
queryMaxCode3.Type=TSQL
queryMaxCode3.SQL=SELECT COUNT(CAT3_CODE) AS MAXCODE FROM CLP_EVL_CAT3 WHERE CAT1_CODE = <CAT1_CODE> AND CAT2_CODE = <CAT2_CODE>
queryMaxCode3.Debug=N

//添加临床路径评估分类字典1
insertCLP_EVL_CAT1.Type=TSQL
insertCLP_EVL_CAT1.SQL = INSERT INTO CLP_EVL_CAT1&
	(&
		CAT1_CODE,REGION_CODE,CAT1_CHN_DESC,&
		CAT1_ENG_DESC,PY1,PY2,SEQ,DESCRIPTION,&
		OPT_USER,OPT_DATE,OPT_TERM&
	) &
	VALUES&
	(&
		<CAT1_CODE>,<REGION_CODE>,<CAT1_CHN_DESC>,&
		<CAT1_ENG_DESC>,<PY1>,<ZJ1>,<SEQ1>,<DESCRIPTION1>,&
		<OPT_USER>,SYSDATE,<OPT_TERM>&
	)
insertCLP_EVL_CAT1.Debug=N

//添加临床路径评估分类字典2
insertCLP_EVL_CAT2.Type=TSQL
insertCLP_EVL_CAT2.SQL = INSERT INTO CLP_EVL_CAT2 &
	(&
		CAT1_CODE,CAT2_CODE,REGION_CODE,CAT2_CHN_DESC,&
		CAT2_ENG_DESC,PY1,PY2,SEQ,DESCRIPTION,&
		OPT_USER,OPT_DATE,OPT_TERM &
	) &
	VALUES &
	(&
		<CAT1_CODE>,<CAT2_CODE>,<REGION_CODE>,<CAT2_CHN_DESC>,&
		<CAT2_ENG_DESC>,<PY2>,<ZJ2>,<SEQ2>,<DESCRIPTION2>,&
		<OPT_USER>,SYSDATE,<OPT_TERM>&
	)
insertCLP_EVL_CAT2.Debug=N

//添加临床路径评估分类字典3
insertCLP_EVL_CAT3.Type=TSQL
insertCLP_EVL_CAT3.SQL = INSERT INTO CLP_EVL_CAT3&
	( &
		CAT1_CODE,CAT2_CODE,CAT3_CODE,REGION_CODE,SCORE,&
		CAT3_CHN_DESC,CAT3_ENG_DESC,PY1,PY2,SEQ,DESCRIPTION,& 
		OPT_USER,OPT_DATE,OPT_TERM&
	) &
	VALUES&
	(&
		<CAT1_CODE>,<CAT2_CODE>,<CAT3_CODE>,<REGION_CODE>,<SCORE>,&
		<CAT3_CHN_DESC>,<CAT3_ENG_DESC>,<PY3>,<ZJ3>,<SEQ3>,<DESCRIPTION3>,&
		<OPT_USER>,SYSDATE,<OPT_TERM>&
	)
insertCLP_EVL_CAT3.Debug=N

//更新临床路径评估分类字典1
updateCLP_EVL_CAT1.Type=TSQL
updateCLP_EVL_CAT1.SQL=UPDATE CLP_EVL_CAT1 SET CAT1_CHN_DESC = <CAT1_CHN_DESC>,CAT1_ENG_DESC = <CAT1_ENG_DESC>, &
		PY1 = <PY1>,PY2 = <ZJ1>,SEQ = <SEQ1>,DESCRIPTION = <DESCRIPTION1>,&
		OPT_USER = <OPT_USER>,OPT_DATE=SYSDATE,OPT_TERM = <OPT_TERM> & 
		WHERE CAT1_CODE = <CAT1_CODE>
updateCLP_EVL_CAT1.Debug=N

//更新临床路径评估分类字典2
updateCLP_EVL_CAT2.Type=TSQL
updateCLP_EVL_CAT2.SQL =UPDATE CLP_EVL_CAT2 SET CAT2_CHN_DESC = <CAT2_CHN_DESC>,&
		CAT2_ENG_DESC = <CAT2_ENG_DESC>, &
		PY1 = <PY2>,PY2 = <ZJ2>,SEQ = <SEQ2>,DESCRIPTION = <DESCRIPTION2>,&
		OPT_USER = <OPT_USER>, OPT_DATE=SYSDATE,OPT_TERM = <OPT_TERM> & 
		WHERE CAT2_CODE = <CAT2_CODE> AND CAT1_CODE = <CAT1_CODE>
updateCLP_EVL_CAT2.Debug=N

//更新临床路径评估分类字典3
updateCLP_EVL_CAT3.Type=TSQL
updateCLP_EVL_CAT3.SQL =UPDATE CLP_EVL_CAT3 SET CAT3_CHN_DESC = <CAT3_CHN_DESC>,CAT3_ENG_DESC = <CAT3_ENG_DESC>, & 
		PY1 = <PY3>,PY2 = <ZJ3>,SEQ = <SEQ3>,DESCRIPTION = <DESCRIPTION3>,&
		SCORE = <SCORE>,OPT_USER = <OPT_USER>,&
		OPT_DATE=SYSDATE,OPT_TERM = <OPT_TERM>& 
		WHERE CAT3_CODE = <CAT3_CODE> AND CAT2_CODE = <CAT2_CODE> AND CAT1_CODE = <CAT1_CODE>
updateCLP_EVL_CAT3.Debug=N


//删除临床路径评估分类字典3
deleteCLP_EVL_CAT3.Type=TSQL
deleteCLP_EVL_CAT3.SQL=DELETE FROM CLP_EVL_CAT3 WHERE REGION_CODE = <REGION_CODE> AND CAT3_CODE=<CAT3_CODE>
deleteCLP_EVL_CAT3.Debug=N

//删除临床路径评估分类字典3WithParentID1
deleteCLP_EVL_CAT3WithParentID1.Type=TSQL
deleteCLP_EVL_CAT3WithParentID1.SQL=DELETE FROM CLP_EVL_CAT3 WHERE REGION_CODE = <REGION_CODE> AND CAT1_CODE=<CAT1_CODE>
deleteCLP_EVL_CAT3WithParentID1.Debug=N
//删除临床路径评估分类字典3WithParentID2
deleteCLP_EVL_CAT3WithParentID2.Type=TSQL
deleteCLP_EVL_CAT3WithParentID2.SQL=DELETE FROM CLP_EVL_CAT3 WHERE REGION_CODE = <REGION_CODE> AND CAT2_CODE=<CAT2_CODE>
deleteCLP_EVL_CAT3WithParentID2.Debug=N

//删除临床路径评估分类字典2
deleteCLP_EVL_CAT2.Type=TSQL
deleteCLP_EVL_CAT2.SQL=DELETE FROM CLP_EVL_CAT2 WHERE REGION_CODE = <REGION_CODE> AND CAT2_CODE=<CAT2_CODE>
deleteCLP_EVL_CAT2.Debug=N

//删除临床路径评估分类字典2根据parentID1
deleteCLP_EVL_CAT2WithParentID1.Type=TSQL
deleteCLP_EVL_CAT2WithParentID1.SQL=DELETE FROM CLP_EVL_CAT2 WHERE REGION_CODE = <REGION_CODE> AND CAT1_CODE=<CAT1_CODE>
deleteCLP_EVL_CAT2WithParentID1.Debug=N

//删除临床路径评估分类字典1
deleteCLP_EVL_CAT1.Type=TSQL
deleteCLP_EVL_CAT1.SQL=DELETE FROM CLP_EVL_CAT1 WHERE REGION_CODE = <REGION_CODE> AND CAT1_CODE=<CAT1_CODE>
deleteCLP_EVL_CAT1.Debug=N

//检查是否已经存在该code的临床路径执行人员
verify.Type=TSQL
verify.SQL=SELECT COUNT(CAT3_CODE) AS COUNTS FROM CLP_EVL_CAT3 WHERE REGION_CODE = <REGION_CODE> AND CAT3_CODE=<CAT3_CODE>
verify.Debug=N