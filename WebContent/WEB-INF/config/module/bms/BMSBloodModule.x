   #
   # Title:血品信息
   #
   # Description:血品信息
   #
   # Copyright: JavaHis (c) 2009
   #
   # @author zhangy 2009/04/29

Module.item=insert;updateIn;query;delete;queryBloodCross;queryBloodStock;getApplyInfo;ApplyUpdateBloodCross;ApplyUpdateBloodOut;getSumTot;queryBloodStockStatus;queryBloodQtyStock;queryMonthStock;queryBloodCrossExceptOut

//新增
insert.Type=TSQL
insert.SQL=INSERT INTO BMS_BLOOD(BLOOD_NO, RH_FLG, BLD_CODE, BLDRESU_CODE, SUBCAT_CODE, & 
				 IN_DATE, BLD_TYPE, SHIT_FLG, END_DATE, IN_PRICE, BLOOD_VOL, &
				 ORG_BARCODE, STATE_CODE, OPT_USER, OPT_DATE, OPT_TERM) &
			  VALUES(<BLOOD_NO>, <RH_FLG>, <BLD_CODE>, <BLDRESU_CODE>, <SUBCAT_CODE>, & 
				 <IN_DATE>, <BLD_TYPE>, <SHIT_FLG>, <END_DATE>, <IN_PRICE>, <BLOOD_VOL>, &
				 <ORG_BARCODE>, <STATE_CODE>, <OPT_USER>, <OPT_DATE>, <OPT_TERM>)
insert.Debug=N

//入库更新
updateIn.Type=TSQL
updateIn.SQL=UPDATE BMS_BLOOD SET &
			RH_FLG=<RH_FLG>, BLD_CODE=<BLD_CODE>, BLDRESU_CODE=<BLDRESU_CODE>, SUBCAT_CODE=<SUBCAT_CODE>, &
			IN_DATE=<IN_DATE>, BLD_TYPE=<BLD_TYPE>, SHIT_FLG=<SHIT_FLG>, END_DATE=<END_DATE>, IN_PRICE=<IN_PRICE>, &
			BLOOD_VOL=<BLOOD_VOL>, ORG_BARCODE=<ORG_BARCODE>, STATE_CODE=<STATE_CODE>, OPT_USER=<OPT_USER>, OPT_DATE=<OPT_DATE>, &
			OPT_TERM=<OPT_TERM> WHERE BLOOD_NO=<BLOOD_NO>
updateIn.Debug=N

//查询
query.Type=TSQL
query.SQL=SELECT BLOOD_NO, RH_FLG, BLD_CODE, BLDRESU_CODE, SUBCAT_CODE, &
		 IN_DATE, BLD_TYPE, SHIT_FLG, END_DATE, IN_PRICE, BLOOD_VOL, &
		 ORG_BARCODE, STATE_CODE, APPLY_NO, MR_NO, IPD_NO, &
		 CASE_NO, ID_NO, USE_DATE, CROSS_MATCH_L, CROSS_MATCH_S, & 
   		 ANTI_A, ANTI_B, RESULT, TEST_DATE, TEST_USER, &
   		 PRE_U, PRE_D, T, P, R, &
   		 WORK_USER, OUT_NO, OUT_DATE, OUT_USER, TRAN_RESN, &
   		 TRAN_DATE FROM BMS_BLOOD ORDER BY BLOOD_NO
query.ITEM=BLOOD_NO;BLDRESU_CODE;BLD_CODE;SUBCAT_CODE;BLD_TYPE;START_DATE;END_DATE;APPLY_NO
query.BLOOD_NO=BLOOD_NO=<BLOOD_NO>
query.BLDRESU_CODE=BLDRESU_CODE=<BLDRESU_CODE>
query.BLD_CODE=BLD_CODE=<BLD_CODE>
query.SUBCAT_CODE=SUBCAT_CODE=<SUBCAT_CODE>
query.BLD_TYPE=BLD_TYPE=<BLD_TYPE>
query.START_DATE=IN_DATE>=<START_DATE>
query.END_DATE=IN_DATE<=<END_DATE>
query.APPLY_NO=APPLY_NO=<APPLY_NO>
query.Debug=N


//删除
delete.Type=TSQL
delete.SQL=DELETE FROM BMS_BLOOD WHERE BLOOD_NO=<BLOOD_NO>
delete.Debug=N


//交叉配学查询
queryBloodCross.Type=TSQL
queryBloodCross.SQL=SELECT BLOOD_NO, RH_FLG, BLD_CODE, BLDRESU_CODE, SUBCAT_CODE, &
			   IN_DATE, BLD_TYPE, SHIT_FLG, END_DATE, IN_PRICE, BLOOD_VOL, &
		 	   ORG_BARCODE, STATE_CODE, APPLY_NO, MR_NO, IPD_NO, &
		 	   CASE_NO, ID_NO, USE_DATE, CROSS_MATCH_L, CROSS_MATCH_S, & 
   		 	   ANTI_A, ANTI_B, RESULT, TEST_DATE, TEST_USER, &
   		 	   PRE_U, PRE_D, T, P, R, &
   		 	   WORK_USER, OUT_NO, OUT_DATE, OUT_USER, TRAN_RESN, &
   		 	   TRAN_DATE FROM BMS_BLOOD
queryBloodCross.ITEM=APPLY_NO;BLDRESU_CODE
queryBloodCross.APPLY_NO=APPLY_NO=<APPLY_NO>
queryBloodCross.STATE_CODE=STATE_CODE=<STATE_CODE>
queryBloodCross.Debug=N


//库存查询
queryBloodStock.Type=TSQL
queryBloodStock.SQL=SELECT BLOOD_NO, RH_FLG, BLD_CODE, BLDRESU_CODE, SUBCAT_CODE, &
			   IN_DATE, BLD_TYPE, SHIT_FLG, END_DATE, IN_PRICE, BLOOD_VOL, &
		 	   ORG_BARCODE, STATE_CODE, APPLY_NO, MR_NO, IPD_NO, &
		 	   CASE_NO, ID_NO, USE_DATE, CROSS_MATCH_L, CROSS_MATCH_S, & 
   		 	   ANTI_A, ANTI_B, RESULT, TEST_DATE, TEST_USER, &
   		 	   PRE_U, PRE_D, T, P, R, &
   		 	   WORK_USER, OUT_NO, OUT_DATE, OUT_USER, TRAN_RESN, &
   		 	   TRAN_DATE FROM BMS_BLOOD &
   		 	   WHERE END_DATE > SYSDATE AND STATE_CODE = '0'  &
                          ORDER BY   BLOOD_NO
queryBloodStock.ITEM=BLOOD_NO;BLD_CODE;BLD_TYPE;SUBCAT_CODE;END_DATE
queryBloodStock.BLOOD_NO=BLOOD_NO=<BLOOD_NO>
queryBloodStock.BLD_CODE=BLD_CODE=<BLD_CODE>
queryBloodStock.BLD_TYPE=BLD_TYPE=<BLD_TYPE>
queryBloodStock.SUBCAT_CODE=SUBCAT_CODE=<SUBCAT_CODE>
queryBloodStock.END_DATE=END_DATE=<END_DATE>
queryBloodStock.Debug=N


//根据就诊序号,病案号和住院号获得病患输血信息(红细胞,血小板,血浆,全血,其他)
getApplyInfo.Type=TSQL
getApplyInfo.SQL=SELECT B.FRONTPG_TYPE, SUM (A.BLOOD_VOL) AS BLOOD_VOL &
	         FROM BMS_BLOOD A, BMS_BLDCODE B &
		 WHERE A.BLD_CODE = B.BLD_CODE AND A.CASE_NO =<CASE_NO> AND A.MR_NO = <MR_NO> AND A.STATE_CODE = '2' &
		 GROUP BY B.FRONTPG_TYPE & 
   		 ORDER BY B.FRONTPG_TYPE
getApplyInfo.ITEM=IPD_NO
getApplyInfo.IPD_NO=A.IPD_NO=<IPD_NO>
getApplyInfo.Debug=N


//交叉配血
//===========pangben modify 20110628 添加RH血型修改
ApplyUpdateBloodCross.Type=TSQL
ApplyUpdateBloodCross.SQL=UPDATE BMS_BLOOD SET &
				 STATE_CODE=<STATE_CODE>, APPLY_NO=<APPLY_NO>, MR_NO=<MR_NO>, IPD_NO=<IPD_NO>, &
				 CASE_NO=<CASE_NO>, ID_NO=<ID_NO>, CROSS_MATCH_L=<CROSS_MATCH_L>, CROSS_MATCH_S=<CROSS_MATCH_S>, ANTI_A=<ANTI_A>, &
				 ANTI_B=<ANTI_B>, RESULT=<RESULT>, TEST_USER=<TEST_USER>, OPT_USER=<OPT_USER>, OPT_DATE=<OPT_DATE>, &
				 OPT_TERM=<OPT_TERM>, TEST_DATE=<TEST_DATE>,RH_FLG=<RH_FLG> WHERE BLOOD_NO=<BLOOD_NO>
ApplyUpdateBloodCross.Debug=N


//血品出库
ApplyUpdateBloodOut.Type=TSQL
ApplyUpdateBloodOut.SQL=UPDATE BMS_BLOOD SET &
				 STATE_CODE=<STATE_CODE>, OUT_NO=<OUT_NO>, OUT_DATE=<OUT_DATE>, OUT_USER=<OUT_USER>, &
				 DEPT_CODE=<DEPT_CODE>, STATION_CODE=<STATION_CODE>, &
				 OPT_USER=<OPT_USER>, OPT_DATE=<OPT_DATE>, &
				 OPT_TERM=<OPT_TERM> WHERE BLOOD_NO=<BLOOD_NO>
ApplyUpdateBloodOut.Debug=N


//查询 配血量 + 出库量
getSumTot.Type=TSQL
getSumTot.SQL=SELECT SUM(BLOOD_VOL) AS SUM_TOT &
	         FROM BMS_BLOOD &
		 WHERE APPLY_NO = <APPLY_NO> AND BLD_CODE = <BLD_CODE> AND BLD_TYPE = <BLD_TYPE> &
		 AND STATE_CODE IN ('1' , '2')
getSumTot.Debug=N


//库存状态查询
queryBloodStockStatus.Type=TSQL
queryBloodStockStatus.SQL=SELECT A.BLD_CODE, A.SUBCAT_CODE, A.BLD_TYPE, A.BLOOD_VOL, B.UNIT_CODE, &
			   A.END_DATE, A.STATE_CODE, A.BLOOD_NO &
		 	   FROM BMS_BLOOD A, BMS_BLDCODE B &
		 	   WHERE A.BLD_CODE = B.BLD_CODE 
queryBloodStockStatus.ITEM=BLD_CODE;SUBCAT_CODE;BLD_TYPE;END_DATE;BLD_STATE;BLOOD_NO
queryBloodStockStatus.BLD_CODE=A.BLD_CODE=<BLD_CODE>
queryBloodStockStatus.SUBCAT_CODE=A.SUBCAT_CODE=<SUBCAT_CODE>
queryBloodStockStatus.BLD_TYPE=A.BLD_TYPE=<BLD_TYPE>
queryBloodStockStatus.END_DATE=A.END_DATE BETWEEN <START_DATE> AND <END_DATE>
queryBloodStockStatus.BLD_STATE=A.BLD_STATE=<BLD_STATE>
queryBloodStockStatus.BLOOD_NO=A.BLOOD_NO=<BLOOD_NO>
queryBloodStockStatus.Debug=N


//血品库存查询
queryBloodQtyStock.Type=TSQL
queryBloodQtyStock.SQL=SELECT BLOOD_NO, BLD_CODE, SUBCAT_CODE, BLD_TYPE, RH_FLG, END_DATE,STATE_CODE &
   		 	   FROM BMS_BLOOD ORDER BY BLOOD_NO
queryBloodQtyStock.ITEM=BLOOD_NO;BLD_CODE;BLD_TYPE;SUBCAT_CODE;END_DATE;STATE_CODE
queryBloodQtyStock.BLOOD_NO=BLOOD_NO=<BLOOD_NO>
queryBloodQtyStock.BLD_CODE=BLD_CODE=<BLD_CODE>
queryBloodQtyStock.BLD_TYPE=BLD_TYPE=<BLD_TYPE>
queryBloodQtyStock.SUBCAT_CODE=SUBCAT_CODE=<SUBCAT_CODE>
queryBloodQtyStock.END_DATE=END_DATE=<END_DATE>
queryBloodQtyStock.STATE_CODE=STATE_CODE=<STATE_CODE>
queryBloodQtyStock.Debug=N

//血品库存查询
queryMonthStock.Type=TSQL
queryMonthStock.SQL=SELECT   B.DEPT_CHN_DESC, C.STATION_DESC, A.BLD_CODE, SUM (A.BLOOD_VOL) AS BLOOD_VOL &
		           FROM BMS_BLOOD A, SYS_DEPT B, SYS_STATION C &
   		 	   WHERE A.DEPT_CODE = B.DEPT_CODE AND A.STATION_CODE = C.STATION_CODE(+) AND A.STATE_CODE = '2' &
   		 	   GROUP BY B.DEPT_CHN_DESC, C.STATION_DESC, A.BLD_CODE &
   		 	   ORDER BY A.BLD_CODE
queryMonthStock.ITEM=DEPT_CODE;STATION_CODE;START_DATE;BLD_CODE
queryMonthStock.DEPT_CODE=A.DEPT_CODE=<DEPT_CODE>
queryMonthStock.STATION_CODE=A.STATION_CODE=<STATION_CODE>
queryMonthStock.START_DATE=A.OUT_DATE BETWEEN <START_DATE> AND <END_DATE>
queryMonthStock.BLD_CODE=A.BLD_CODE=<BLD_CODE>
queryMonthStock.Debug=N

//交叉配学查询（已出库的不再显示在交叉配血界面【TABLE_M】中）
queryBloodCrossExceptOut.Type=TSQL
queryBloodCrossExceptOut.SQL=SELECT BLOOD_NO, RH_FLG, BLD_CODE, BLDRESU_CODE, SUBCAT_CODE, &
			   IN_DATE, BLD_TYPE, SHIT_FLG, END_DATE, IN_PRICE, BLOOD_VOL, &
		 	   ORG_BARCODE, STATE_CODE, APPLY_NO, MR_NO, IPD_NO, &
		 	   CASE_NO, ID_NO, USE_DATE, CROSS_MATCH_L, CROSS_MATCH_S, & 
   		 	   ANTI_A, ANTI_B, RESULT, TEST_DATE, TEST_USER, &
   		 	   PRE_U, PRE_D, T, P, R, &
   		 	   WORK_USER, OUT_NO, OUT_DATE, OUT_USER, TRAN_RESN, &
   		 	   TRAN_DATE FROM BMS_BLOOD &
   		 	   WHERE (OUT_NO IS NULL OR OUT_NO = '') 
queryBloodCrossExceptOut.ITEM=APPLY_NO;BLDRESU_CODE
queryBloodCrossExceptOut.APPLY_NO=APPLY_NO=<APPLY_NO>
queryBloodCrossExceptOut.STATE_CODE=STATE_CODE=<STATE_CODE>
queryBloodCrossExceptOut.Debug=N



       
  
 



    
   
  
