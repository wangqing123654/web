   #
   # Title:药库库存主档
   #
   # Description:药库库存主档
   #
   # Copyright: JavaHis (c) 2009
   #
   # @author zhangy 2009/04/29

Module.item=queryStockM;queryStockMAll;createNewStockM;updateStockMBUQty;insert;update;updateAddLockQty;updateStockMBUAndLockQty;updateMinusLockQty;onInsertIndStockM

//查询药库库存主档排除过期
queryStockM.Type=TSQL
queryStockM.SQL=SELECT ORG_CODE , ORDER_CODE , REGION_CODE , DISPENSE_FLG , &
		  DISPENSE_ORG_CODE , QTY_TYPE , MM_USE_QTY , DD_USE_QTY , MATERIAL_LOC_CODE , &
		  MAX_QTY , SAFE_QTY ,MIN_QTY , ECONOMICBUY_QTY , BUY_UNRECEIVE_QTY , &
		  STANDING_QTY , ACTIVE_FLG ,OPT_USER , OPT_DATE , OPT_TERM ,MATERIAL_LOC_SEQ,&
		  SUP_CODE,LOCK_QTY &
		FROM IND_STOCKM &
		WHERE ACTIVE_FLG='N' &
		ORDER BY ORG_CODE , ORDER_CODE
queryStockM.ITEM=ORG_CODE;ORDER_CODE;MATERIAL_LOC_CODE
queryStockM.ORG_CODE=ORG_CODE=<ORG_CODE>
queryStockM.ORDER_CODE=ORDER_CODE=<ORDER_CODE>
queryStockM.MATERIAL_LOC_CODE=MATERIAL_LOC_CODE=<MATERIAL_LOC_CODE>
queryStockM.Debug=N

//查询药库库存主档  包含过期
queryStockMAll.Type=TSQL
queryStockMAll.SQL=SELECT ORG_CODE , ORDER_CODE , REGION_CODE , DISPENSE_FLG , &
		  DISPENSE_ORG_CODE , QTY_TYPE , MM_USE_QTY , DD_USE_QTY , MATERIAL_LOC_CODE , &
		  MAX_QTY , SAFE_QTY ,MIN_QTY , ECONOMICBUY_QTY , BUY_UNRECEIVE_QTY , &
		  STANDING_QTY , ACTIVE_FLG ,OPT_USER , OPT_DATE , OPT_TERM ,MATERIAL_LOC_SEQ,SUP_CODE &
		FROM IND_STOCKM &
		ORDER BY ORG_CODE , ORDER_CODE
queryStockMAll.ITEM=ORG_CODE;ORDER_CODE;MATERIAL_LOC_CODE
queryStockMAll.ORG_CODE=ORG_CODE=<ORG_CODE>
queryStockMAll.ORDER_CODE=ORDER_CODE=<ORDER_CODE>
queryStockMAll.MATERIAL_LOC_CODE=MATERIAL_LOC_CODE=<MATERIAL_LOC_CODE>
queryStockMAll.Debug=N



//新建药库库存主档
createNewStockM.Type=TSQL
createNewStockM.SQL=INSERT INTO IND_STOCKM( &
			ORG_CODE , ORDER_CODE , REGION_CODE, ACTIVE_FLG ,OPT_USER , OPT_DATE , OPT_TERM , &
			MATERIAL_LOC_CODE, DISPENSE_FLG, DISPENSE_ORG_CODE, QTY_TYPE, MM_USE_QTY, &
			DD_USE_QTY, MAX_QTY, SAFE_QTY, MIN_QTY, ECONOMICBUY_QTY, &
			BUY_UNRECEIVE_QTY, STANDING_QTY,MATERIAL_LOC_DESC,ELETAG_CODE,MATERIAL_LOC_SEQ, &
			SUP_CODE,LOCK_QTY) &
		   VALUES( &
		   	<ORG_CODE> , <ORDER_CODE> , <REGION_CODE>, 'N' ,<OPT_USER> , <OPT_DATE> , <OPT_TERM> , &
		        <MATERIAL_LOC_CODE>, 'N', '', '', 0, &
		        0, 0, 0, 0, 0, &
			0, 0,<MATERIAL_LOC_DESC>,<ELETAG_CODE>,<MATERIAL_LOC_SEQ>, &
                        <SUP_CODE>,<LOCK_QTY> )
createNewStockM.Debug=N

//更新在途量
updateStockMBUQty.Type=TSQL
updateStockMBUQty.SQL=UPDATE IND_STOCKM SET BUY_UNRECEIVE_QTY=BUY_UNRECEIVE_QTY+<BUY_UNRECEIVE_QTY>  &
			WHERE ORG_CODE=<ORG_CODE> AND ORDER_CODE=<ORDER_CODE>
updateStockMBUQty.Debug=N


//新建药库库存主档
insert.Type=TSQL
insert.SQL=INSERT INTO IND_STOCKM( &
			ORG_CODE , ORDER_CODE , REGION_CODE, ACTIVE_FLG ,OPT_USER , OPT_DATE , OPT_TERM , &
			MATERIAL_LOC_CODE, DISPENSE_FLG, DISPENSE_ORG_CODE, QTY_TYPE, MM_USE_QTY, &
			DD_USE_QTY, MAX_QTY, SAFE_QTY, MIN_QTY, ECONOMICBUY_QTY, &
			BUY_UNRECEIVE_QTY, STANDING_QTY,MATERIAL_LOC_DESC,ELETAG_CODE,MATERIAL_LOC_SEQ,SUP_CODE,LOCK_QTY ) &
	    	   VALUES( &
	    	   	<ORG_CODE> , <ORDER_CODE> , <REGION_CODE>, <ACTIVE_FLG> ,<OPT_USER> , <OPT_DATE> , <OPT_TERM> , &
			<MATERIAL_LOC_CODE>, <DISPENSE_FLG>, <DISPENSE_ORG_CODE>, <QTY_TYPE>, <MM_USE_QTY>, &
			<DD_USE_QTY>, <MAX_QTY>, <SAFE_QTY>, <MIN_QTY>, <ECONOMICBUY_QTY>, &
			<BUY_UNRECEIVE_QTY>, <STANDING_QTY>,<MATERIAL_LOC_DESC>,<ELETAG_CODE>,<MATERIAL_LOC_SEQ>,&
                        <SUP_CODE>,<LOCK_QTY> )
insert.Debug=N


//更新药库库存主档
update.Type=TSQL
update.SQL=UPDATE IND_STOCKM SET REGION_CODE=<REGION_CODE>, ACTIVE_FLG=<ACTIVE_FLG>, MATERIAL_LOC_CODE=<MATERIAL_LOC_CODE>, &
                                 DISPENSE_FLG=<DISPENSE_FLG>, DISPENSE_ORG_CODE=<DISPENSE_ORG_CODE>, &
                                 QTY_TYPE=<QTY_TYPE>, MM_USE_QTY=<MM_USE_QTY>, DD_USE_QTY=<DD_USE_QTY>, &
                                 MAX_QTY=<MAX_QTY>, SAFE_QTY=<SAFE_QTY>, MIN_QTY=<MIN_QTY>,MATERIAL_LOC_SEQ=<MATERIAL_LOC_SEQ>, &
                                 ECONOMICBUY_QTY=<ECONOMICBUY_QTY>, BUY_UNRECEIVE_QTY=<BUY_UNRECEIVE_QTY>,SUP_CODE=<SUP_CODE>, &
                                 STANDING_QTY=<STANDING_QTY>, OPT_USER=<OPT_USER>, OPT_DATE=<OPT_DATE>,ELETAG_CODE=<ELETAG_CODE>,MATERIAL_LOC_DESC=<MATERIAL_LOC_DESC>, &
                                 OPT_TERM=<OPT_TERM>,LOCK_QTY=<LOCK_QTY>  WHERE ORG_CODE=<ORG_CODE> AND ORDER_CODE=<ORDER_CODE>	
update.Debug=N

//更新LOCK_QTY
updateAddLockQty.Type=TSQL
updateAddLockQty.SQL=UPDATE IND_STOCKM SET LOCK_QTY=LOCK_QTY+<LOCK_QTY>  &
			WHERE ORG_CODE=<ORG_CODE> AND ORDER_CODE=<ORDER_CODE>
updateAddLockQty.Debug=N


//update 
updateStockMBUAndLockQty.Type=TSQL
updateStockMBUAndLockQty.SQL=UPDATE IND_STOCKM SET BUY_UNRECEIVE_QTY=BUY_UNRECEIVE_QTY+<BUY_UNRECEIVE_QTY> ,LOCK_QTY=LOCK_QTY+<LOCK_QTY> &
			WHERE ORG_CODE=<ORG_CODE> AND ORDER_CODE=<ORDER_CODE>
updateStockMBUAndLockQty.Debug=N

updateMinusLockQty.Type=TSQL
updateMinusLockQty.SQL=UPDATE IND_STOCKM SET LOCK_QTY=LOCK_QTY-<LOCK_QTY>  &
			WHERE ORG_CODE=<ORG_CODE> AND ORDER_CODE=<ORDER_CODE>
updateMinusLockQty.Debug=N

//新建药库库存主档
onInsertIndStockM.Type=TSQL
onInsertIndStockM.SQL=INSERT INTO IND_STOCKM( &
			ORG_CODE , ORDER_CODE , REGION_CODE, ACTIVE_FLG ,OPT_USER , OPT_DATE , OPT_TERM , &
			 DISPENSE_FLG,SUP_CODE,LOCK_QTY ) &
	    	   VALUES( &
	    	   	<ORG_CODE> , <ORDER_CODE> , <REGION_CODE>, <ACTIVE_FLG> ,<OPT_USER> , SYSDATE , <OPT_TERM> , &
			 <DISPENSE_FLG>, <SUP_CODE>,<LOCK_QTY> )
onInsertIndStockM.Debug=N