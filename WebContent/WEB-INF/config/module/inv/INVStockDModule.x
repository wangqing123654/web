   #
   # Title: 库存明细档
   #
   # Description: 库存明细档
   #
   # Copyright: JavaHis (c) 2009
   #
   # @author zhangy 2009/05/04

Module.item=insertInvStockD;updateInvStockD;queryStockQty;updateQtyOut;updateQtyIn;updateStockQtyByPack;updateStockQtyByReq;updateStockQtyByTear;getStockBatchSeq;updateStockQty



//新增库存明细
insertInvStockD.Type=TSQL
insertInvStockD.SQL=INSERT INTO INV_STOCKD(&
			   ORG_CODE, INV_CODE, BATCH_SEQ, REGION_CODE, BATCH_NO, &
			   VALID_DATE, STOCK_QTY, LASTDAY_TOLSTOCK_QTY, DAYIN_QTY, DAYOUT_QTY, &
			   DAY_CHECKMODI_QTY, DAY_VERIFYIN_QTY, DAY_VERIFYIN_AMT, GIFTIN_QTY, DAY_REGRESSGOODS_QTY, &
			   DAY_REGRESSGOODS_AMT, DAY_REQUESTIN_QTY, DAY_REQUESTOUT_QTY, DAY_CHANGEIN_QTY, DAY_CHANGEOUT_QTY, &
			   DAY_TRANSMITIN_QTY, DAY_TRANSMITOUT_QTY, DAY_WASTE_QTY, DAY_DISPENSE_QTY, DAY_REGRESS_QTY, &
			   FREEZE_TOT, UNIT_PRICE, STOCK_UNIT, OPT_USER, OPT_DATE, OPT_TERM) &
	             VALUES( &
			   <ORG_CODE>, <INV_CODE>, <BATCH_SEQ>, <REGION_CODE>, <BATCH_NO>, &
			   <VALID_DATE>, <STOCK_QTY>, <LASTDAY_TOLSTOCK_QTY>, <DAYIN_QTY>, <DAYOUT_QTY>, &
			   <DAY_CHECKMODI_QTY>, <DAY_VERIFYIN_QTY>, <DAY_VERIFYIN_AMT>, <GIFTIN_QTY>, <DAY_REGRESSGOODS_QTY>, &
			   <DAY_REGRESSGOODS_AMT>, <DAY_REQUESTIN_QTY>, <DAY_REQUESTOUT_QTY>, <DAY_CHANGEIN_QTY>, <DAY_CHANGEOUT_QTY>, &
			   <DAY_TRANSMITIN_QTY>, <DAY_TRANSMITOUT_QTY>, <DAY_WASTE_QTY>, <DAY_DISPENSE_QTY>, <DAY_REGRESS_QTY>, &
			   <FREEZE_TOT>, <UNIT_PRICE>, <STOCK_UNIT>, <OPT_USER>, <OPT_DATE>, <OPT_TERM>)
insertInvStockD.Debug=Y


//更新库存明细(验收入库)
updateInvStockD.Type=TSQL
updateInvStockD.SQL=UPDATE INV_STOCKD SET &
			STOCK_QTY=STOCK_QTY+<STOCK_QTY> , DAYIN_QTY=DAYIN_QTY+<DAYIN_QTY>, GIFTIN_QTY=GIFTIN_QTY+<GIFTIN_QTY>, &
			DAY_VERIFYIN_QTY=DAY_VERIFYIN_QTY+<DAY_VERIFYIN_QTY>, DAY_VERIFYIN_AMT=DAY_VERIFYIN_AMT+<DAY_VERIFYIN_AMT>, &
			OPT_USER=<OPT_USER> , OPT_DATE=SYSDATE , OPT_TERM=<OPT_TERM> &
	    	      WHERE INV_CODE =<INV_CODE> AND ORG_CODE=<ORG_CODE> AND BATCH_SEQ=<BATCH_SEQ>
updateInvStockD.Debug=N


//查询库存明细
queryStockQty.Type=TSQL
queryStockQty.SQL=SELECT A.STOCK_QTY, B.STOCK_UNIT, B.STOCK_QTY AS S_QTY, &
       			 B.DISPENSE_QTY AS D_QTY, B.DISPENSE_UNIT &
  		    FROM INV_STOCKD A, INV_TRANSUNIT B &
 		   WHERE A.INV_CODE = B.INV_CODE &
		     AND A.ORG_CODE = <ORG_CODE> &
		     AND A.INV_CODE = <INV_CODE> &
		     AND A.BATCH_SEQ = <BATCH_SEQ> 
queryStockQty.Debug=N


//申请单出库更新库存
updateQtyOut.Type=TSQL
updateQtyOut.SQL=UPDATE INV_STOCKD SET &
			STOCK_QTY=STOCK_QTY-<STOCK_QTY> , &
			DAYOUT_QTY=DAYOUT_QTY+<STOCK_QTY>, &
			DAY_REQUESTOUT_QTY=DAY_REQUESTOUT_QTY+<STOCK_QTY>, &
			DAY_CHANGEOUT_QTY=DAY_CHANGEOUT_QTY+<STOCK_QTY>, &
			DAY_TRANSMITOUT_QTY=DAY_TRANSMITOUT_QTY+<STOCK_QTY>, &
			DAY_WASTE_QTY=DAY_WASTE_QTY+<STOCK_QTY>, &
			OPT_USER=<OPT_USER> , OPT_DATE=SYSDATE , OPT_TERM=<OPT_TERM> &
	    	      WHERE INV_CODE =<INV_CODE> AND ORG_CODE=<ORG_CODE> AND BATCH_SEQ=<BATCH_SEQ>
updateQtyOut.Debug=N


//申请单入库更新库存
updateQtyIn.Type=TSQL
updateQtyIn.SQL=UPDATE INV_STOCKD SET &
			STOCK_QTY=STOCK_QTY+<STOCK_QTY> , &
			DAYIN_QTY=DAYIN_QTY+<STOCK_QTY>, &
			DAY_REQUESTIN_QTY=DAY_REQUESTIN_QTY+<STOCK_QTY>, &
			DAY_CHANGEIN_QTY=DAY_CHANGEIN_QTY+<STOCK_QTY>, &
			DAY_TRANSMITIN_QTY=DAY_TRANSMITIN_QTY+<STOCK_QTY>, &
		        OPT_USER=<OPT_USER> , OPT_DATE=SYSDATE , OPT_TERM=<OPT_TERM> &
	    	      WHERE INV_CODE =<INV_CODE> AND ORG_CODE=<ORG_CODE> AND BATCH_SEQ=<BATCH_SEQ>
updateQtyIn.Debug=N




//手术包打包更新库存明细的库存量GYSUsed
updateStockQtyByPack.Type=TSQL
updateStockQtyByPack.SQL=UPDATE INV_STOCKD SET &
			        STOCK_QTY=STOCK_QTY-<STOCK_QTY> , &
			        DAYOUT_QTY=DAYOUT_QTY+<STOCK_QTY>, &
		        	OPT_USER=<OPT_USER> , OPT_DATE=SYSDATE , OPT_TERM=<OPT_TERM> &
	    	    	  WHERE INV_CODE =<INV_CODE> AND ORG_CODE=<ORG_CODE> AND BATCH_SEQ=<BATCH_SEQ>
updateStockQtyByPack.Debug=N


//供应室出库作业更新库存量(请领作业)
updateStockQtyByReq.Type=TSQL
updateStockQtyByReq.SQL=UPDATE INV_STOCKD SET &
			       STOCK_QTY=STOCK_QTY-<QTY>, DAYOUT_QTY=DAYOUT_QTY+<QTY>, DAY_REQUESTOUT_QTY=DAY_REQUESTOUT_QTY+<QTY>, &
			       OPT_USER=<OPT_USER> , OPT_DATE=SYSDATE , OPT_TERM=<OPT_TERM> &
	    	         WHERE INV_CODE =<INV_CODE> AND ORG_CODE=<ORG_CODE> AND BATCH_SEQ=<BATCH_SEQ>
updateStockQtyByReq.Debug=N


//手术包拆包更新库存明细的库存量GYSUsed
updateStockQtyByTear.Type=TSQL
updateStockQtyByTear.SQL=UPDATE INV_STOCKD SET &
			        STOCK_QTY=STOCK_QTY+<STOCK_QTY> , &
			        DAYIN_QTY=DAYIN_QTY+<STOCK_QTY>, &
		        	OPT_USER=<OPT_USER> , OPT_DATE=SYSDATE , OPT_TERM=<OPT_TERM> &
	    	    	  WHERE INV_CODE =<INV_CODE> AND ORG_CODE=<ORG_CODE> AND BATCH_SEQ=<BATCH_SEQ>
updateStockQtyByTear.Debug=N





//查找此物资的库存总量(主要是判断取哪个批次序号)GYSUsed
getStockBatchSeq.Type=TSQL
getStockBatchSeq.SQL=SELECT D.ORG_CODE, D.INV_CODE, D.BATCH_SEQ, D.REGION_CODE, D.BATCH_NO, & 
			D.VALID_DATE, D.STOCK_QTY, D.LASTDAY_TOLSTOCK_QTY, D.DAYIN_QTY, D.DAYOUT_QTY, & 
			D.DAY_CHECKMODI_QTY, D.DAY_VERIFYIN_QTY, D.DAY_VERIFYIN_AMT, D.GIFTIN_QTY, & 
			D.DAY_REGRESSGOODS_QTY, D.DAY_REGRESSGOODS_AMT, D.DAY_REQUESTIN_QTY, D.DAY_REQUESTOUT_QTY, & 
			D.DAY_CHANGEIN_QTY, D.DAY_CHANGEOUT_QTY, D.DAY_TRANSMITIN_QTY, D.DAY_TRANSMITOUT_QTY, & 
			D.DAY_WASTE_QTY, D.DAY_DISPENSE_QTY, D.DAY_REGRESS_QTY, D.FREEZE_TOT, D.UNIT_PRICE, & 
			D.STOCK_UNIT, D.OPT_USER, D.OPT_DATE, D.OPT_TERM, B.DESCRIPTION, B.COST_PRICE & 
			FROM INV_STOCKD D LEFT JOIN INV_BASE B ON D.INV_CODE=B.INV_CODE 
getStockBatchSeq.item=INV_CODE;ORG_CODE;
getStockBatchSeq.INV_CODE=D.INV_CODE=<INV_CODE>
getStockBatchSeq.ORG_CODE=D.ORG_CODE=<ORG_CODE>
getStockBatchSeq.Debug=N


//更新此物资的库存总量(物资代码,批次序号)GYSUsed
updateStockQty.Type=TSQL
updateStockQty.SQL=UPDATE INV_STOCKD &
                   SET STOCK_QTY=STOCK_QTY+<STOCK_QTY>
updateStockQty.item=INV_CODE;BATCH_SEQ;ORG_CODE
updateStockQty.INV_CODE=INV_CODE=<INV_CODE>
updateStockQty.BATCH_SEQ=BATCH_SEQ=<BATCH_SEQ>
updateStockQty.ORG_CODE=ORG_CODE=<ORG_CODE>
updateStockQty.Debug=N
