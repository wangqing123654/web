# 
#  Title:病区日志中间档导入module
# 
#  Description:病区日志中间档导入module
# 
#  Copyright: Copyright (c) Javahis 2008
# 
#  author zhangk 2009.05.27
#  version 1.0
#
Module.item=ORIGINAL_NUM;ADM_NUM;FROM_OTHER_DEPT;RECOVER_NUM;EFFECT_NUM;INVALED_NUM;DIED_NUM;OTHER_NUM;TRANS_DEPT_NUM;END_BED_NUM;&
DS_TOTAL_ADM_DAY;OUYCHK_OI_NUM;OUYCHK_RAPA_NUM;OUYCHK_INOUT;OUYCHK_OPBFAF;HEAL_LV_I_CASE;HEAL_LV_BAD;GET_TIMES;SUCCESS_TIMES;AVG_ADM_DAY;&
RAPA_NUM;OPBFAF;VIP_NUM;BMP_NUM;LUP_NUM;Insert_Station_Daily;delete_Station_Daily;select_Station_Daily;updateREAL_OCUU_BED_NUM;CARE_NUMS;DS_ADM_NUM

//昨日原有人数
ORIGINAL_NUM.Type=TSQL
ORIGINAL_NUM.SQL=SELECT REAL_OCUU_BED_NUM AS O_NUM,DEPT_CODE,STATION_CODE &
	         FROM STA_STATION_DAILY &
	         WHERE STA_DATE = <STADATE>
ORIGINAL_NUM.item=REGION_CODE
//=============pangben modify 20110617 添加区域条件
ORIGINAL_NUM.REGION_CODE=REGION_CODE=<REGION_CODE>
ORIGINAL_NUM.Debug=N

//入院人数
ADM_NUM.Type=TSQL
ADM_NUM.SQL=SELECT COUNT(CASE_NO) AS O_NUM,IN_DEPT_CODE AS DEPT_CODE,IN_STATION_CODE AS STATION_CODE &
	    FROM ADM_INP &
	    WHERE IN_DATE BETWEEN TO_DATE(<STADATE>,'YYYYMMDD') AND TO_DATE(<STADATE>||' 23:59:59','YYYYMMDD HH24:MI:SS') &
	    AND NEW_BORN_FLG='N'&
	    AND CANCEL_FLG <> 'Y' &
	    GROUP BY IN_DEPT_CODE,IN_STATION_CODE 
ADM_NUM.item=REGION_CODE
//=============pangben modify 20110617 添加区域条件
ADM_NUM.REGION_CODE=REGION_CODE=<REGION_CODE>
ADM_NUM.Debug=N

//他科转入
FROM_OTHER_DEPT.Type=TSQL
FROM_OTHER_DEPT.SQL=SELECT COUNT(A.CASE_NO) AS O_NUM,A.OUT_STATION_CODE AS STATION_CODE,A.OUT_DEPT_CODE AS DEPT_CODE &      
                    FROM ADM_TRANS_LOG  A ,ADM_INP B &
                    WHERE (A.PSF_KIND='OUDP' OR A.PSF_KIND IS NULL) &
		    AND (A.OUT_DEPT_CODE IS NULL OR (A.IN_DEPT_CODE<>A.OUT_DEPT_CODE OR A.IN_STATION_CODE<>A.OUT_STATION_CODE)) &
                    AND TO_CHAR(A.OUT_DATE,'YYYYMMDD')=<STADATE> &
                    AND A.CASE_NO=B.CASE_NO AND B.NEW_BORN_FLG='N'&
                    GROUP BY A.OUT_STATION_CODE,A.OUT_DEPT_CODE
FROM_OTHER_DEPT.item=REGION_CODE
//=============pangben modify 20110617 添加区域条件
//FROM_OTHER_DEPT.REGION_CODE=REGION_CODE=<REGION_CODE>	        
FROM_OTHER_DEPT.Debug=N

//治愈人数
RECOVER_NUM.Type=TSQL
RECOVER_NUM.SQL=SELECT COUNT(A.CASE_NO) AS O_NUM,A.OUT_STATION AS STATION_CODE,A.OUT_DEPT AS DEPT_CODE &
	        FROM MRO_RECORD A,ADM_INP B &
	        WHERE OUT_DATE BETWEEN TO_DATE(<STADATE>,'YYYYMMDD') AND TO_DATE(<STADATE>||' 23:59:59','YYYYMMDD HH24:MI:SS') &
	        AND A.CASE_NO=B.CASE_NO AND B.NEW_BORN_FLG<>'Y'&
	        AND CODE1_STATUS='1' &
	        GROUP BY OUT_DEPT,OUT_STATION 
RECOVER_NUM.item=REGION_CODE
//=============pangben modify 20110617 添加区域条件
RECOVER_NUM.REGION_CODE=A.REGION_CODE=<REGION_CODE>
RECOVER_NUM.Debug=N

//好转病人数
EFFECT_NUM.Type=TSQL
EFFECT_NUM.SQL=SELECT COUNT(A.CASE_NO) AS O_NUM,A.OUT_STATION AS STATION_CODE,A.OUT_DEPT AS DEPT_CODE &
	      FROM MRO_RECORD A,ADM_INP B &
	       WHERE OUT_DATE BETWEEN TO_DATE(<STADATE>,'YYYYMMDD') AND TO_DATE(<STADATE>||' 23:59:59','YYYYMMDD HH24:MI:SS') &
	       AND A.CASE_NO=B.CASE_NO AND B.NEW_BORN_FLG<>'Y'&
	       AND CODE1_STATUS='2' &
	       GROUP BY OUT_DEPT,OUT_STATION
EFFECT_NUM.item=REGION_CODE
//=============pangben modify 20110617 添加区域条件
EFFECT_NUM.REGION_CODE=A.REGION_CODE=<REGION_CODE>
EFFECT_NUM.Debug=N

//未愈人数
INVALED_NUM.Type=TSQL
INVALED_NUM.SQL=SELECT COUNT(A.CASE_NO) AS O_NUM,A.OUT_STATION AS STATION_CODE,A.OUT_DEPT AS DEPT_CODE &
	        FROM MRO_RECORD A,ADM_INP B &
	        WHERE OUT_DATE BETWEEN TO_DATE(<STADATE>,'YYYYMMDD') AND TO_DATE(<STADATE>||' 23:59:59','YYYYMMDD HH24:MI:SS') &
	        AND A.CASE_NO=B.CASE_NO AND B.NEW_BORN_FLG<>'Y'&
	        AND CODE1_STATUS='3' &
	        GROUP BY OUT_DEPT,OUT_STATION
INVALED_NUM.item=REGION_CODE
//=============pangben modify 20110617 添加区域条件
INVALED_NUM.REGION_CODE=A.REGION_CODE=<REGION_CODE>
INVALED_NUM.Debug=N

//死亡人数 
DIED_NUM.Type=TSQL
DIED_NUM.SQL=SELECT COUNT(A.CASE_NO) AS O_NUM,A.OUT_STATION AS STATION_CODE,A.OUT_DEPT AS DEPT_CODE &
	     FROM MRO_RECORD A,ADM_INP B &
	     WHERE OUT_DATE BETWEEN TO_DATE(<STADATE>,'YYYYMMDD') AND TO_DATE(<STADATE>||' 23:59:59','YYYYMMDD HH24:MI:SS') &
	     AND A.CASE_NO=B.CASE_NO AND B.NEW_BORN_FLG<>'Y'&
	     AND CODE1_STATUS='4' &
	     GROUP BY OUT_DEPT,OUT_STATION
DIED_NUM.item=REGION_CODE
//=============pangben modify 20110617 添加区域条件
DIED_NUM.REGION_CODE=A.REGION_CODE=<REGION_CODE>
DIED_NUM.Debug=N

//其他人数
OTHER_NUM.Type=TSQL
OTHER_NUM.SQL=SELECT COUNT(A.CASE_NO) AS O_NUM,A.OUT_STATION AS STATION_CODE,A.OUT_DEPT AS DEPT_CODE &
	      FROM MRO_RECORD A,ADM_INP B &
	      WHERE OUT_DATE BETWEEN TO_DATE(<STADATE>,'YYYYMMDD') AND TO_DATE(<STADATE>||' 23:59:59','YYYYMMDD HH24:MI:SS') &
	      AND A.CASE_NO=B.CASE_NO AND B.NEW_BORN_FLG<>'Y'&
	      AND CODE1_STATUS='5' &
	      GROUP BY OUT_DEPT,OUT_STATION
OTHER_NUM.item=REGION_CODE
//=============pangben modify 20110617 添加区域条件
OTHER_NUM.REGION_CODE=A.REGION_CODE=<REGION_CODE>
OTHER_NUM.Debug=N

//转往他科人数
TRANS_DEPT_NUM.Type=TSQL
TRANS_DEPT_NUM.SQL=SELECT COUNT(A.CASE_NO) AS O_NUM,A.IN_STATION_CODE AS STATION_CODE,A.IN_DEPT_CODE AS DEPT_CODE &      
                    FROM ADM_TRANS_LOG  A,ADM_INP B &
                    WHERE (A.PSF_KIND='OUDP' OR A.PSF_KIND IS NULL) &
		    AND (A.OUT_DEPT_CODE IS NULL OR (A.IN_DEPT_CODE<>A.OUT_DEPT_CODE OR A.IN_STATION_CODE<>A.OUT_STATION_CODE)) &
                    AND A.CASE_NO=B.CASE_NO AND B.NEW_BORN_FLG<>'Y'& 
                    AND TO_CHAR(A.OUT_DATE,'YYYYMMDD')=<STADATE> &
                    GROUP BY A.IN_STATION_CODE,A.IN_DEPT_CODE
TRANS_DEPT_NUM.item=REGION_CODE
//=============pangben modify 20110617 添加区域条件
//TRANS_DEPT_NUM.REGION_CODE=A.REGION_CODE=<REGION_CODE>		   
TRANS_DEPT_NUM.Debug=N

#//期末实有病床数
#END_BED_NUM.Type=TSQL
#END_BED_NUM.SQL=SELECT COUNT(BED_NO) AS O_NUM,STATION_CODE  AS DEPT_CODE &
#	        FROM SYS_BED &
#	        WHERE OCCU_RATE_FLG ='Y' &
#	        AND ACTIVE_FLG ='Y' &
#	        GROUP BY STATION_CODE
#END_BED_NUM.Debug=N

//期末实有病床数(从中间科室信息表中取床位数)
END_BED_NUM.Type=TSQL
END_BED_NUM.SQL=SELECT BED_ACTIVE_NUM AS O_NUM,B.IPD_DEPT_CODE AS DEPT_CODE,B.STATION_CODE &
			FROM STA_OEI_DEPT_INFO A,STA_OEI_DEPT_LIST B &
			WHERE A.STA_DEPT_CODE=B.DEPT_CODE
END_BED_NUM.Debug=N

//出院者住院日数
DS_TOTAL_ADM_DAY.Type=TSQL
DS_TOTAL_ADM_DAY.SQL=SELECT SUM(CASE WHEN REAL_STAY_DAYS IS NULL THEN 0 ELSE REAL_STAY_DAYS END)  AS O_NUM,OUT_STATION AS STATION_CODE,OUT_DEPT AS DEPT_CODE &
		     FROM MRO_RECORD &
		     WHERE OUT_DATE BETWEEN TO_DATE(<STADATE>,'YYYYMMDD') AND TO_DATE(<STADATE>||' 23:59:59','YYYYMMDD HH24:MI:SS') &
		     GROUP BY OUT_DEPT,OUT_STATION 
DS_TOTAL_ADM_DAY.item=REGION_CODE
//=============pangben modify 20110617 添加区域条件
DS_TOTAL_ADM_DAY.REGION_CODE=REGION_CODE=<REGION_CODE>
DS_TOTAL_ADM_DAY.Debug=N

//出院人数
DS_ADM_NUM.Type=TSQL
DS_ADM_NUM.SQL=SELECT COUNT(CASE_NO) AS O_NUM,DS_DEPT_CODE AS DEPT_CODE,DS_STATION_CODE AS STATION_CODE &
	    FROM ADM_INP &
	    WHERE DS_DATE BETWEEN TO_DATE(<STADATE>,'YYYYMMDD') AND TO_DATE(<STADATE>||' 23:59:59','YYYYMMDD HH24:MI:SS') &
	    AND NEW_BORN_FLG<>'Y'& 
	    AND CANCEL_FLG <> 'Y' &
	    GROUP BY DS_DEPT_CODE,DS_STATION_CODE 
DS_ADM_NUM.item=REGION_CODE
//=============pangben modify 20110617 添加区域条件
DS_ADM_NUM.REGION_CODE=REGION_CODE=<REGION_CODE>
DS_ADM_NUM.Debug=N

//门诊诊断符合数
OUYCHK_OI_NUM.Type=TSQL
OUYCHK_OI_NUM.SQL=SELECT COUNT(QUYCHK_OI) AS O_NUM,OUT_STATION AS STATION_CODE,OUT_DEPT AS DEPT_CODE &
		  FROM MRO_RECORD &
		  WHERE OUT_DATE BETWEEN TO_DATE(<STADATE>,'YYYYMMDD') AND TO_DATE(<STADATE>||' 23:59:59','YYYYMMDD HH24:MI:SS') &
		  AND QUYCHK_OI ='1' &
		  GROUP BY OUT_DEPT,OUT_STATION
OUYCHK_OI_NUM.item=REGION_CODE
//=============pangben modify 20110617 添加区域条件
OUYCHK_OI_NUM.REGION_CODE=REGION_CODE=<REGION_CODE>
OUYCHK_OI_NUM.Debug=N

//病理诊断符合数
OUYCHK_RAPA_NUM.Type=TSQL
OUYCHK_RAPA_NUM.SQL=SELECT COUNT(QUYCHK_CLPA) AS O_NUM,OUT_STATION AS STATION_CODE,OUT_DEPT AS DEPT_CODE &
	        FROM MRO_RECORD &
	        WHERE OUT_DATE BETWEEN TO_DATE(<STADATE>,'YYYYMMDD') AND TO_DATE(<STADATE>||' 23:59:59','YYYYMMDD HH24:MI:SS') &
	        AND QUYCHK_CLPA ='1' &
	        GROUP BY OUT_DEPT,OUT_STATION
OUYCHK_RAPA_NUM.item=REGION_CODE
//=============pangben modify 20110617 添加区域条件
OUYCHK_RAPA_NUM.REGION_CODE=REGION_CODE=<REGION_CODE>
OUYCHK_RAPA_NUM.Debug=N

//入院诊断符合数
OUYCHK_INOUT.Type=TSQL
OUYCHK_INOUT.SQL=SELECT COUNT(QUYCHK_INOUT) AS O_NUM,OUT_STATION AS STATION_CODE,OUT_DEPT AS DEPT_CODE &
	         FROM MRO_RECORD &
	         WHERE OUT_DATE BETWEEN TO_DATE(<STADATE>,'YYYYMMDD') AND TO_DATE(<STADATE>||' 23:59:59','YYYYMMDD HH24:MI:SS') &
	         AND QUYCHK_INOUT ='1' &
	         GROUP BY OUT_DEPT,OUT_STATION
OUYCHK_INOUT.item=REGION_CODE
//=============pangben modify 20110617 添加区域条件
OUYCHK_INOUT.REGION_CODE=REGION_CODE=<REGION_CODE>
OUYCHK_INOUT.Debug=N

//术前术后诊断符合数
OUYCHK_OPBFAF.Type=TSQL
OUYCHK_OPBFAF.SQL=SELECT COUNT(QUYCHK_OPBFAF) AS O_NUM,OUT_STATION AS STATION_CODE,OUT_DEPT AS DEPT_CODE &
	          FROM MRO_RECORD &
	          WHERE OUT_DATE BETWEEN TO_DATE(<STADATE>,'YYYYMMDD') AND TO_DATE(<STADATE>||' 23:59:59','YYYYMMDD HH24:MI:SS') &
	          AND QUYCHK_OPBFAF ='1' &
	          GROUP BY OUT_DEPT,OUT_STATION
OUYCHK_OPBFAF.item=REGION_CODE
//=============pangben modify 20110617 添加区域条件
OUYCHK_OPBFAF.REGION_CODE=REGION_CODE=<REGION_CODE>
OUYCHK_OPBFAF.Debug=N

//无菌切口手术数
HEAL_LV_I_CASE.Type=TSQL
HEAL_LV_I_CASE.SQL=SELECT COUNT(DISTINCT(A.CASE_NO)) AS O_NUM,B.OUT_STATION AS STATION_CODE,B.OUT_DEPT AS DEPT_CODE &
		   FROM MRO_RECORD_OP A,MRO_RECORD B &
		   WHERE A.MR_NO=B.MR_NO &
		   AND A.CASE_NO=B.CASE_NO &
		   AND B.OUT_DATE BETWEEN TO_DATE(<STADATE>,'YYYYMMDD') AND TO_DATE(<STADATE>||' 23:59:59','YYYYMMDD HH24:MI:SS') &
		   AND A.HEALTH_LEVEL IN ('11','12','13') &
		   GROUP BY B.OUT_DEPT,B.OUT_STATION
HEAL_LV_I_CASE.item=REGION_CODE
//=============pangben modify 20110617 添加区域条件
HEAL_LV_I_CASE.REGION_CODE=B.REGION_CODE=<REGION_CODE>
HEAL_LV_I_CASE.Debug=N

//无菌切口化脓数 
HEAL_LV_BAD.Type=TSQL
HEAL_LV_BAD.SQL=SELECT COUNT(DISTINCT(A.CASE_NO)) AS O_NUM,B.OUT_STATION AS STATION_CODE,B.OUT_DEPT AS DEPT_CODE &
		FROM MRO_RECORD_OP A,MRO_RECORD B &
		WHERE A.MR_NO=B.MR_NO &
		AND A.CASE_NO=B.CASE_NO &
		AND B.OUT_DATE BETWEEN TO_DATE(<STADATE>,'YYYYMMDD') AND TO_DATE(<STADATE>||' 23:59:59','YYYYMMDD HH24:MI:SS') &
		AND A.HEALTH_LEVEL = '13' &
		GROUP BY B.OUT_DEPT,B.OUT_STATION
HEAL_LV_BAD.item=REGION_CODE
//=============pangben modify 20110617 添加区域条件
HEAL_LV_BAD.REGION_CODE=B.REGION_CODE=<REGION_CODE>
HEAL_LV_BAD.Debug=N

//危重病人抢救次数
GET_TIMES.Type=TSQL
GET_TIMES.SQL=SELECT SUM(CASE WHEN GET_TIMES IS NULL THEN 0 ELSE GET_TIMES END) AS O_NUM,OUT_STATION AS STATION_CODE,OUT_DEPT AS DEPT_CODE &
	      FROM MRO_RECORD &
	      WHERE OUT_DATE BETWEEN TO_DATE(<STADATE>,'YYYYMMDD') AND TO_DATE(<STADATE>||' 23:59:59','YYYYMMDD HH24:MI:SS') &
	      GROUP BY OUT_DEPT,OUT_STATION
GET_TIMES.item=REGION_CODE
//=============pangben modify 20110617 添加区域条件
GET_TIMES.REGION_CODE=REGION_CODE=<REGION_CODE>
GET_TIMES.Debug=N

//危重病人抢救成功
SUCCESS_TIMES.Type=TSQL
SUCCESS_TIMES.SQL=SELECT SUM(CASE WHEN SUCCESS_TIMES IS NULL THEN 0 ELSE SUCCESS_TIMES END) AS O_NUM,OUT_STATION AS STATION_CODE,OUT_DEPT AS DEPT_CODE &
	          FROM MRO_RECORD &
	          WHERE OUT_DATE BETWEEN TO_DATE(<STADATE>,'YYYYMMDD') AND TO_DATE(<STADATE>||' 23:59:59','YYYYMMDD HH24:MI:SS') &
	          GROUP BY OUT_DEPT,OUT_STATION
SUCCESS_TIMES.item=REGION_CODE
//=============pangben modify 20110617 添加区域条件
SUCCESS_TIMES.REGION_CODE=REGION_CODE=<REGION_CODE>
SUCCESS_TIMES.Debug=N
//陪护人数
CARE_NUMS.Type=TSQL
CARE_NUMS.SQL= SELECT COUNT(CASE_NO) AS O_NUM,STATION_CODE,DEPT_CODE FROM ADM_DAILY_REC WHERE POST_DATE=<STADATE> AND CARE_NUM>0 &
               GROUP BY DEPT_CODE,STATION_CODE
CARE_NUMS.Debug=N

//患者平均住院日
AVG_ADM_DAY.Type=TSQL
AVG_ADM_DAY.SQL=SELECT AVG(CASE WHEN REAL_STAY_DAYS IS NULL THEN 0 ELSE REAL_STAY_DAYS END ) AS O_NUM,OUT_STATION AS STATION_CODE,OUT_DEPT AS DEPT_CODE &
	        FROM MRO_RECORD &
	        WHERE OUT_DATE BETWEEN TO_DATE(<STADATE>,'YYYYMMDD') AND TO_DATE(<STADATE>||' 23:59:59','YYYYMMDD HH24:MI:SS') &
	        GROUP BY OUT_DEPT,OUT_STATION
AVG_ADM_DAY.item=REGION_CODE
//=============pangben modify 20110617 添加区域条件
AVG_ADM_DAY.REGION_CODE=REGION_CODE=<REGION_CODE>
AVG_ADM_DAY.Debug=N

//病理诊断数
RAPA_NUM.Type=TSQL
RAPA_NUM.SQL=SELECT COUNT(QUYCHK_CLPA) AS O_NUM,OUT_STATION AS STATION_CODE,OUT_DEPT AS DEPT_CODE &
	     FROM MRO_RECORD &
	     WHERE OUT_DATE BETWEEN TO_DATE(<STADATE>,'YYYYMMDD') AND TO_DATE(<STADATE>||' 23:59:59','YYYYMMDD HH24:MI:SS') &
	     AND (QUYCHK_CLPA = '1' OR QUYCHK_RAPA = '1') &
	     GROUP BY OUT_DEPT,OUT_STATION
RAPA_NUM.item=REGION_CODE
//=============pangben modify 20110617 添加区域条件
RAPA_NUM.REGION_CODE=REGION_CODE=<REGION_CODE>
RAPA_NUM.Debug=N

//术前术后诊断数
OPBFAF.Type=TSQL
OPBFAF.SQL=SELECT COUNT(QUYCHK_OPBFAF) AS O_NUM,OUT_STATION AS STATION_CODE,OUT_DEPT AS DEPT_CODE &
	   FROM MRO_RECORD &
	   WHERE OUT_DATE BETWEEN TO_DATE(<STADATE>,'YYYYMMDD') AND TO_DATE(<STADATE>||' 23:59:59','YYYYMMDD HH24:MI:SS') &
	   AND QUYCHK_OPBFAF = '1' &
	   GROUP BY OUT_DEPT,OUT_STATION
OPBFAF.item=REGION_CODE
//=============pangben modify 20110617 添加区域条件
OPBFAF.REGION_CODE=REGION_CODE=<REGION_CODE>
OPBFAF.Debug=N


// 静脉置管人数 add by wanglong 20140304
VIP_NUM.Type=TSQL
VIP_NUM.SQL=SELECT A.DEPT_CODE, A.STATION_CODE, COUNT(DISTINCT CASE_NO) O_NUM &
              FROM IBS_ORDD A, SYS_FEE B &
             WHERE A.ORDER_CODE = B.ORDER_CODE &
               AND B.ORD_SUPERVISION IN ('04') &
               AND A.BILL_DATE BETWEEN TO_DATE(<STADATE>, 'YYYYMMDD') AND TO_DATE(<STADATE>||'235959', 'YYYYMMDDHH24MISS') &
          GROUP BY A.DEPT_CODE, A.STATION_CODE
VIP_NUM.item=REGION_CODE
VIP_NUM.REGION_CODE=B.REGION_CODE=<REGION_CODE>
VIP_NUM.Debug=N

// 呼吸机人数 add by wanglong 20140304
BMP_NUM.Type=TSQL
BMP_NUM.SQL=SELECT A.DEPT_CODE, A.STATION_CODE, COUNT(DISTINCT CASE_NO) O_NUM &
              FROM IBS_ORDD A, SYS_FEE B &
             WHERE A.ORDER_CODE = B.ORDER_CODE &
               AND B.ORD_SUPERVISION IN ('03') &
               AND A.BILL_DATE BETWEEN TO_DATE(<STADATE>, 'YYYYMMDD') AND TO_DATE(<STADATE>||'235959', 'YYYYMMDDHH24MISS') &
          GROUP BY A.DEPT_CODE, A.STATION_CODE
BMP_NUM.item=REGION_CODE
BMP_NUM.REGION_CODE=B.REGION_CODE=<REGION_CODE>
BMP_NUM.Debug=N

// 留尿管人数 add by wanglong 20140304
LUP_NUM.Type=TSQL
LUP_NUM.SQL=SELECT A.DEPT_CODE, A.STATION_CODE, COUNT(DISTINCT CASE_NO) O_NUM &
              FROM IBS_ORDD A, SYS_FEE B &
             WHERE A.ORDER_CODE = B.ORDER_CODE &
               AND B.ORD_SUPERVISION IN ('02') &
               AND A.BILL_DATE BETWEEN TO_DATE(<STADATE>, 'YYYYMMDD') AND TO_DATE(<STADATE>||'235959', 'YYYYMMDDHH24MISS') &
          GROUP BY A.DEPT_CODE, A.STATION_CODE
LUP_NUM.item=REGION_CODE
LUP_NUM.REGION_CODE=B.REGION_CODE=<REGION_CODE>
LUP_NUM.Debug=N


//病区日志中间档 插入
//=============pangben modify 20110520 添加区域列
Insert_Station_Daily.Type=TSQL
Insert_Station_Daily.SQL=INSERT INTO STA_STATION_DAILY ( &
			       STA_DATE, DEPT_CODE, STATION_CODE, &
			       ORIGINAL_NUM, ADM_NUM, FROM_OTHER_DEPT, &
			       RECOVER_NUM, EFFECT_NUM, INVALED_NUM, &
			       DIED_NUM, OTHER_NUM, TRANS_DEPT_NUM, &
			       END_BED_NUM, REAL_OPEN_BEB_NUM, AVG_OPEB_BED_NUM, &
			       REAL_OCUU_BED_NUM, DS_TOTAL_ADM_DAY,DS_ADM_NUM, OUYCHK_OI_NUM, &
			       OUYCHK_RAPA_NUM, OUYCHK_INOUT, OUYCHK_OPBFAF, &
			       HEAL_LV_I_CASE, HEAL_LV_BAD, GET_TIMES, &
			       SUCCESS_TIMES, CARE_NUMS, RECOVER_RATE, &
			       EFFECT_RATE, DIED_RATE, BED_RETUEN, &
			       BED_WORK_DAY, BED_USE_RATE, AVG_ADM_DAY, &
			       DIAG_RATE, HEAL_LV_BAD_RATE, SUCCESS_RATE, &
			       CARE_RATE, OUYCHK_RAPA_RATE, OUYCHK_OPBFAF_RATE, &
			       //add by wanglong 20140304
			       VIP_NUM, BMP_NUM, LUP_NUM, &
			       OPT_USER, OPT_DATE, OPT_TERM,REGION_CODE) &
			       VALUES ( &
			       <STA_DATE>,<DEPT_CODE>,<STATION_CODE>, &
			       <ORIGINAL_NUM>, <ADM_NUM>, <FROM_OTHER_DEPT>, &
			       <RECOVER_NUM>, <EFFECT_NUM>, <INVALED_NUM>, &
			       <DIED_NUM>, <OTHER_NUM>, <TRANS_DEPT_NUM>, &
			       <END_BED_NUM>, <REAL_OPEN_BEB_NUM>, <AVG_OPEB_BED_NUM>, &
			       <REAL_OCUU_BED_NUM>, <DS_TOTAL_ADM_DAY>,<DS_ADM_NUM>,<OUYCHK_OI_NUM>, &
			       <OUYCHK_RAPA_NUM>, <OUYCHK_INOUT>, <OUYCHK_OPBFAF>, &
			       <HEAL_LV_I_CASE>, <HEAL_LV_BAD>, <GET_TIMES>, &
			       <SUCCESS_TIMES>, <CARE_NUMS>, <RECOVER_RATE>, &
			       <EFFECT_RATE>, <DIED_RATE>,<BED_RETUEN>, &
			       <BED_WORK_DAY>, <BED_USE_RATE>, <AVG_ADM_DAY>, &
			       <DIAG_RATE>, <HEAL_LV_BAD_RATE>, <SUCCESS_RATE>, &
			       <CARE_RATE>, <OUYCHK_RAPA_RATE>, <OUYCHK_OPBFAF_RATE>, &
			       //add by wanglong 20140304
			       <VIP_NUM>, <BMP_NUM>, <LUP_NUM>, &
			       <OPT_USER>, SYSDATE, <OPT_TERM>,<REGION_CODE> )
Insert_Station_Daily.Debug=N

//删除病区中间档信息
//=============pangben modify 20110520 添加区域条件
delete_Station_Daily.Type=TSQL
delete_Station_Daily.SQL=DELETE FROM STA_STATION_DAILY  WHERE STA_DATE=<STA_DATE>
delete_Station_Daily.item=DEPT_CODE;REGION_CODE;STATION_CODE
delete_Station_Daily.DEPT_CODE=DEPT_CODE=<DEPT_CODE>
delete_Station_Daily.REGION_CODE=REGION_CODE=<REGION_CODE>
delete_Station_Daily.STATION_CODE=STATION_CODE=<STATION_CODE>
delete_Station_Daily.Debug=N

//查询 STA_STATION_DAILY 病区中间档数据
select_Station_Daily.Type=TSQL
select_Station_Daily.SQL=SELECT &
			   STA_DATE, DEPT_CODE, STATION_CODE, &
			   ORIGINAL_NUM, ADM_NUM, FROM_OTHER_DEPT, &
			   RECOVER_NUM, EFFECT_NUM, INVALED_NUM, &
			   DIED_NUM, OTHER_NUM, TRANS_DEPT_NUM, &
			   END_BED_NUM, REAL_OPEN_BEB_NUM, AVG_OPEB_BED_NUM, &
			   REAL_OCUU_BED_NUM, DS_TOTAL_ADM_DAY,DS_ADM_NUM, OUYCHK_OI_NUM, &
			   OUYCHK_RAPA_NUM, OUYCHK_INOUT, OUYCHK_OPBFAF, &
			   HEAL_LV_I_CASE, HEAL_LV_BAD, GET_TIMES, &
			   SUCCESS_TIMES, CARE_NUMS, RECOVER_RATE, &
			   EFFECT_RATE, DIED_RATE, BED_RETUEN, &
			   BED_WORK_DAY, BED_USE_RATE, AVG_ADM_DAY, &
			   DIAG_RATE, HEAL_LV_BAD_RATE, SUCCESS_RATE, &
			   CARE_RATE, OUYCHK_RAPA_RATE, OUYCHK_OPBFAF_RATE, &
			   //add by wanglong 20140304
			   VIP_NUM, BMP_NUM, LUP_NUM, &
			   OPT_USER, OPT_DATE, OPT_TERM &
			FROM STA_STATION_DAILY
select_Station_Daily.item=STA_DATE;REGION_CODE
//=============pangben modify 20110520 添加区域条件
select_Station_Daily.REGION_CODE=REGION_CODE=<REGION_CODE>
select_Station_Daily.STA_DATE=STA_DATE=<STA_DATE>
select_Station_Daily.Debug=N

//修改 STA_STATION_DAILY 的今日实际占用总床数
updateREAL_OCUU_BED_NUM.Type=TSQL
updateREAL_OCUU_BED_NUM.SQL=UPDATE STA_STATION_DAILY SET REAL_OCUU_BED_NUM=<REAL_OCUU_BED_NUM>, &
				OPT_USER=<OPT_USER>, &
				OPT_DATE=SYSDATE, &
				OPT_TERM=<OPT_TERM> &
				WHERE STA_DATE=<STA_DATE> &
				AND DEPT_CODE=<DEPT_CODE> &
				AND STATION_CODE=<STATION_CODE>
updateREAL_OCUU_BED_NUM.Debug=N